--
The whole stuff is still a bit confused, waiting to be ordered a bit.
Here is how I got the whole stuff working:


--
. building the bitstream
.. ~/repo/zpuino/zpuino.git/zpu/hdl/zpuino/boards/papilio-one/s3e250
.. export PATH=$PATH:/home/texane/repo/zpuino/toolchain/bin:/opt/Xilinx/12.3/ISE_DS/ISE/bin/lin
.. make
.. produces the papilio_routed_one.bit
.. cp to ~/tmp/ for the next step

. sending the bitstream to the fpga and configuring the bootloader
.. ~/repo/zpuino/examples/hello/write.sh contains a script for:
.. sending the bitstream to the fpga
.. putting the bootloader into programming mode

. compiling and uploading a user program via the ARDUINO IDE:
.. run the arduino IDE
.. export PATH=$PATH:/home/texane/repo/zpuino/toolchain/bin:/opt/Xilinx/12.3/ISE_DS/ISE/bin/lin
.. ~/repo/zpuino/arduino-0022-ZA4/arduino
.. example: /home/texane/sketchbook/fu/fu.pde 


--
. compiling and uploading a user program without the ARDUINO IDE:

.. copy the zpuino/experiments/alone/ directory contents in a new directory. It contains the needed
files and can be used as a template for new projects

.. set environment variables, as shown below:
export ARDUINO_DIR=/home/texane/repo/zpuino/arduino-0022-ZA4 ;
export TOOLCHAIN_DIR=/home/texane/repo/zpuino/toolchain/bin ;

.. compile the program with make. A main.bin is produced and is the file to upload.

.. Then, the zpuino bitstream has to be uploaded and the bootloader set in programming
mode. This is the the ./mode.sh shell script role:
./mode.sh

.. Finally, the previously generated binary file can be uploaded with the ./write.sh script:
./write.sh
A success message should be printed.
